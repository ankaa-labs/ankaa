{
    "Comment": "A Catch example of the Amazon States Language using an AWS Lambda Function",
    "StartAt": "LongRunningFunction",
    "States": {
      "LongRunningFunction": {
        "Type": "Task",
        "Resource": "${LongRunningFunctionArn}",
        "TimeoutSeconds": 5,
        "Catch": [
          {
            "ErrorEquals": [
              "States.Timeout"
            ],
            "Next": "TimeoutFallback"
          },
          {
            "ErrorEquals": [
              "States.ALL"
            ],
            "Next": "CatchAllFallback"
          }
        ],
        "End": true
      },
      "TimeoutFallback": {
        "Type": "Pass",
        "Result": "This is a fallback from a Task State States.Timeout exception",
        "End": true
      },
      "CatchAllFallback": {
        "Type": "Pass",
        "Result": "This is a generic fallback from an uncaught error code",
        "End": true
      }
    }
  }