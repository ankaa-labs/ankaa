{
    "StartAt": "Detect text language",
    "States": {
      "Detect text language": {
        "Next": "Is it English?",
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException"
            ],
            "IntervalSeconds": 2,
            "MaxAttempts": 6,
            "BackoffRate": 2
          }
        ],
        "Type": "Task",
        "OutputPath": "$.Payload",
        "Resource": "arn:${AWS::Partition}:states:::lambda:invoke",
        "Parameters": {
          "FunctionName": "${DetectTextLanguage}",
          "Payload.$": "$"
        }
      },
      "Is it English?": {
        "Type": "Choice",
        "Choices": [
          {
            "Variable": "$.lang_code",
            "StringMatches": "en",
            "Next": "Detect addresses in text"
          }
        ],
        "Default": "Language not supported"
      },
      "Language not supported": {
        "Type": "Fail",
        "Error": "DetectTextLanguage returned something that is not \"en\"",
        "Cause": "Amazon Comprehend supports PII detection in only English text."
      },
      "Detect addresses in text": {
        "Next": "Get coordinates for each address",
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException"
            ],
            "IntervalSeconds": 2,
            "MaxAttempts": 6,
            "BackoffRate": 2
          }
        ],
        "Type": "Task",
        "OutputPath": "$.Payload",
        "Resource": "arn:${AWS::Partition}:states:::lambda:invoke",
        "Parameters": {
          "FunctionName": "${DetectAddressesInText}",
          "Payload.$": "$"
        }
      },
      "Get coordinates for each address": {
        "Next": "Generate map with markers",
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException"
            ],
            "IntervalSeconds": 2,
            "MaxAttempts": 6,
            "BackoffRate": 2
          }
        ],
        "Type": "Task",
        "OutputPath": "$.Payload",
        "Resource": "arn:${AWS::Partition}:states:::lambda:invoke",
        "Parameters": {
          "FunctionName": "${GetCoordinatesForEachAddress}",
          "Payload.$": "$"
        }
      },
      "Generate map with markers": {
        "End": true,
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException"
            ],
            "IntervalSeconds": 2,
            "MaxAttempts": 6,
            "BackoffRate": 2
          }
        ],
        "Type": "Task",
        "OutputPath": "$.Payload",
        "Resource": "arn:${AWS::Partition}:states:::lambda:invoke",
        "Parameters": {
          "FunctionName": "${GenerateMapWithMarkers}",
          "Payload.$": "$"
        }
      }
    },
    "TimeoutSeconds": 30
  }